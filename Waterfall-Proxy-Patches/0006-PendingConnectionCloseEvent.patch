From 6985fb67eb656405a0a503d8f9d9594d5eab8821 Mon Sep 17 00:00:00 2001
From: KennyTV <kennytv@t-online.de>
Date: Fri, 13 Mar 2020 22:04:39 +0100
Subject: [PATCH] PendingConnectionCloseEvent


diff --git a/api/src/main/java/net/luminu/bungee/api/event/PendingConnectionClosedEvent.java b/api/src/main/java/net/luminu/bungee/api/event/PendingConnectionClosedEvent.java
new file mode 100644
index 00000000..e55c5ebb
--- /dev/null
+++ b/api/src/main/java/net/luminu/bungee/api/event/PendingConnectionClosedEvent.java
@@ -0,0 +1,41 @@
+package net.luminu.bungee.api.event;
+
+import lombok.EqualsAndHashCode;
+import lombok.ToString;
+import net.md_5.bungee.api.config.ServerInfo;
+import net.md_5.bungee.api.plugin.Event;
+
+import java.util.UUID;
+
+/**
+ * Event fired when a pending connection is closed due to the server being unreachable.
+ */
+@ToString
+@EqualsAndHashCode(callSuper = false)
+public class PendingConnectionClosedEvent extends Event {
+
+    private final UUID uuid;
+    private final String server;
+    private ServerInfo sendTo;
+
+    public PendingConnectionClosedEvent(UUID uuid, String server) {
+        this.uuid = uuid;
+        this.server = server;
+    }
+
+    public UUID getUuid() {
+        return uuid;
+    }
+
+    public String getServer() {
+        return server;
+    }
+
+    public ServerInfo getSendTo() {
+        return sendTo;
+    }
+
+    public void setSendTo(final ServerInfo sendTo) {
+        this.sendTo = sendTo;
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 858b3ae6..5bb77d28 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -347,6 +347,7 @@ public class ServerConnector extends PacketHandler
         user.getPendingConnects().remove( target );
         user.setServerJoinQueue( null );
         user.setDimensionChange( false );
+        user.setConnectingToFallbackLobby( false ); // Luminu - pendingconnectioncloseevent
 
         user.setServer( server );
         ch.getHandle().pipeline().get( HandlerBoss.class ).setHandler( new DownstreamBridge( bungee, user, server ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index 53a582f7..0b431452 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -80,6 +80,7 @@ public final class UserConnection implements ProxiedPlayer
     @Setter
     private Locale customLocale;
     // Luminu end
+    @Getter @Setter private boolean connectingToFallbackLobby; // Luminu - pendingconnectioncloseevent
     /*========================================================================*/
     @NonNull
     private final ProxyServer bungee;
@@ -380,6 +381,18 @@ public final class UserConnection implements ProxiedPlayer
                         connect( def, null, true, ServerConnectEvent.Reason.LOBBY_FALLBACK, request.getConnectTimeout() ); // Waterfall
                     } else if ( dimensionChange )
                     {
+                        // Luminu start - pendingconnectioncloseevent //TODO also do it in the else clause below?
+                        if (!connectingToFallbackLobby) {
+                            net.luminu.bungee.api.event.PendingConnectionClosedEvent closedEvent = new net.luminu.bungee.api.event.PendingConnectionClosedEvent(getUniqueId(), target.getName());
+                            ProxyServer.getInstance().getPluginManager().callEvent(closedEvent);
+
+                            if (closedEvent.getSendTo() != null) {
+                                connectingToFallbackLobby = true;
+                                connect( closedEvent.getSendTo(), ServerConnectEvent.Reason.LOBBY_FALLBACK );
+                                return;
+                            }
+                        }
+                        // Luminu end
                         disconnect( bungee.getTranslation( "fallback_kick", future.cause().getClass().getName() ) );
                     } else
                     {
-- 
2.25.0.windows.1

